name: Build and Deploy

on:
  # trigger deployment on every push to main branch
  push:
    branches: [main]
  # trigger deployment manually
  workflow_dispatch:

jobs:
  docs:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          # fetch all commits to get last updated time or other git log info
          fetch-depth: 0

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          # choose node.js version to use
          node-version: 18
          # cache deps for pnpm
          cache: pnpm

      - name: Clean and install deps
        run: |
            rm -rf node_modules pnpm-lock.yaml
            pnpm install
      
      - name: Install deps
        run: | 
          pnpm install --frozen-lockfile
          pnpm remove @vuepress/client
          pnpm add @vuepress/client@2.0.0-rc.19 -D -E

      # run build script
      - name: Build VuePress site
        run: pnpm docs:build

      # - name: Create CNAME file
      #   run: echo "ps.zpj.io" > dist/CNAME
      
      # # please check out the docs of the workflow for more details
      # # @see https://github.com/crazy-max/ghaction-github-pages
      # - name: Deploy to GitHub Pages
      #   uses: crazy-max/ghaction-github-pages@v4
      #   with:
      #     # deploy to gh-pages branch
      #     target_branch: gh-pages
      #     # deploy the default output dir of VuePress
      #     build_dir: ./dist
      #     cname: ps.zpj.io
      #   env:
      #     # @see https://docs.github.com/en/actions/reference/authentication-in-a-workflow#about-the-github_token-secret
      #     GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN }}

  doxygen:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Clone PicoScenes repository
        run: |
          git clone git@github.com:wifisensing/PicoScenes.git
        env:
          GITHUB_TOKEN: ${{ secrets.SSH_TOKEN }}

      - name: Generate Doxygen documentation
        run: |
          cd PicoScenes
          doxygen ./docs/Doxyfile

      - name: Copy generated HTML to dist
        run: |
          cp -r PicoScenes/html/* dist/

  deploy:
    runs-on: ubuntu-latest
    needs: [docs, doxygen]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Create CNAME file
        run: echo "ps.zpj.io" > dist/CNAME

      - name: Deploy to GitHub Pages
        uses: crazy-max/ghaction-github-pages@v4
        with:
          target_branch: gh-pages
          build_dir: ./dist
          cname: ps.zpj.io
        env:
          GITHUB_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
