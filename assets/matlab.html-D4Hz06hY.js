import{_ as d,a as r}from"./install-PicoScenes-MATLAB-Toolbox-Ce3frRar.js";import{_ as a,c as n,a as i,d as s,r as o,o as l}from"./app-D9QE_WLm.js";const c="/assets/PicoScenesFrameStructure-CE7OBOlq.jpg",h={};function u(p,t){const e=o("CustomToc");return l(),n("div",null,[i(e),t[0]||(t[0]=s('<h2 id="prerequisites" tabindex="-1"><a class="header-anchor" href="#prerequisites"><span>Prerequisites</span></a></h2><p>Since the PMT-Core and the PicoScenes main program rely on the <a href="https://github.com/wifisensing/RXS-Parsing-Core" target="_blank" rel="noopener noreferrer">RxS-Parsing-Core library</a> to parse the CSI data, C/C++ compilers are required by PMT in different OSes. The following table shows the recommended (and also tested) working environments.</p><ul><li>Recommended Working Environments for PicoScenes MATLAB Toolbox</li></ul><table><thead><tr><th></th><th>Linux</th><th>macOS</th><th>Windows</th></tr></thead><tbody><tr><td><strong>OS Version</strong></td><td>Ubuntu 22.04 or its variants</td><td>macOS Big Sur 11.2 or above</td><td>Windows 10 or above</td></tr><tr><td><strong>MATLAB Version</strong></td><td>MATLAB 2020b or above</td><td>MATLAB 2020b or above</td><td>MATLAB 2020b or above</td></tr><tr><td><strong>Compiler</strong></td><td>GCC 9.3+</td><td>Apple Clang 12+ (Xcode 12.4+)</td><td>TDM-GCC 64 (10.3+)</td></tr></tbody></table><p>The following are the preparation steps for each supported OS.</p><h3 id="preparation-steps-on-ubuntu-22-04-or-above" tabindex="-1"><a class="header-anchor" href="#preparation-steps-on-ubuntu-22-04-or-above"><span>Preparation steps on Ubuntu 22.04 or above</span></a></h3><ul><li>Run <code>sudo apt install -y build-essential git</code> to install GCC and git</li><li>Install MATLAB (supporting R2021b to the latest R2022b);</li></ul><h3 id="preparation-steps-on-macos-12-3-and-above" tabindex="-1"><a class="header-anchor" href="#preparation-steps-on-macos-12-3-and-above"><span>Preparation steps on macOS 12.3 and above</span></a></h3><ul><li>Install Xcode 13.3 (or above) from macOS App Store</li><li>Install MATLAB (version R2021b or above);</li></ul><h3 id="preparation-steps-on-windows-10-or-11" tabindex="-1"><a class="header-anchor" href="#preparation-steps-on-windows-10-or-11"><span>Preparation steps on Windows 10 or 11</span></a></h3><ul><li>Install MATLAB (version R2021b or above);</li><li>Install <a href="https://jmeubank.github.io/tdm-gcc/" target="_blank" rel="noopener noreferrer">TDM-GCC-64</a>(choose MinGW-w64 based version, version 10.3+);</li><li>By default, the installer will add <code>&lt;TDM-GCC-64 PATH&gt;</code> your system Environment Variables. Here we assume the installation path is <code>C:\\TDM-GCC-64</code>.</li><li>Open MATLAB, run <code>setenv(&#39;MW_MINGW64_LOC&#39;, &#39;C:\\TDM-GCC-64&#39;)</code> and then <code>mex -setup C++</code> in MATLAB Command Window.</li><li>Click the option <code>MinGW64 Compiler (C++)</code></li></ul><p>The following is a screenshot of setting up TDM-GCC-64 v10.3 in MATLAB R2020b.</p><p><img src="'+d+`" alt="Screenshot: Setup TDM-GCC in MATLAB"></p><h2 id="obtain-picoscenes-matlab-toolbox-core" tabindex="-1"><a class="header-anchor" href="#obtain-picoscenes-matlab-toolbox-core"><span>Obtain PicoScenes MATLAB Toolbox Core</span></a></h2><p>PMT-Core can only be <strong>git cloned --recursive</strong> from its git repo <a href="https://github.com/wifisensing/PicoScenes-MATLAB-Toolbox-Core" target="_blank" rel="noopener noreferrer">PicoScenes MATLAB Toolbox Core</a>. See the repo&#39;s README on how to obtain the toolbox.</p><h2 id="install-pmt-core-in-matlab" tabindex="-1"><a class="header-anchor" href="#install-pmt-core-in-matlab"><span>Install PMT-Core in MATLAB</span></a></h2><p>Open MATLAB, change <code>Current Folder</code> to your <code>PicoScenes-MATLAB-Toolbox-Core</code> directory and run the following commands in Command Window:</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" data-title="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">install_PicoScenes_MATLAB_Toolbox</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">compileRXSParser</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>In a few seconds, if you see a message similar to the picture below, that means the installation is successful.</p><p><img src="`+r+'" alt="Screenshot: Install PicoScenes MATLAB Toolbox Core in MATLAB"></p><h2 id="verify-the-installation" tabindex="-1"><a class="header-anchor" href="#verify-the-installation"><span>Verify the installation</span></a></h2><p>In MATLAB <code>Current Folder</code> or Ubuntu file explorer, navigate to <code>PicoScenes-MATLAB-Toolbox-Core/samples</code> directory, <em>drag&#39;n&#39;drop</em> the two sample .csi files into Command Window, then they will be parsed into cell arrays named <code>samples_9300</code> and <code>samples_x310</code>, respectively.</p><h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage"><span>Usage</span></a></h2><p>You have three ways to parse a .csi file with PMT-Core:</p><ol><li>Double-click the selected .csi file in MATLAB Current Folder</li><li>Drag&#39;n&#39;Drop one or multiple .csi files into MATLAB Command Window</li><li>Run <code>opencsi(FILE_PATH)</code> in MATLAB Command Window, where <code>FILE_PATH</code> is the path to the selected .csi file</li></ol><p>After parsing, you will see bundles with the same names as the .csi files in MATLAB Workspace.</p><h3 id="structures-of-the-picoscenes-tx-and-rx-frames" tabindex="-1"><a class="header-anchor" href="#structures-of-the-picoscenes-tx-and-rx-frames"><span>Structures of the PicoScenes Tx and Rx frames</span></a></h3><p><img src="'+c+'" alt="PicoScenes Tx/Rx Frame Structure"></p><p>Figure <a href="#structures-of-the-picoscenes-tx-and-rx-frames">PicoScenes Tx/Rx Frame Structure</a> shows the Tx and Rx frame structures adopted by PicoScenes. PicoScenes frames consist of multiple <code>PicoScenes Segments</code> (segment). Each segment is a named and more importantly versioned container which holds heterogeneous data structure or content.</p><p><strong>The PMT-Core parses the .csi files in two steps, the Raw Parsing and Bundled Parsing:</strong></p><ul><li>The Raw Parsing: PMT-Core first parses each Rx frame into a MATLAB <code>cell</code>. If a .csi file contains N Rx frames, the Raw Parsing stage will produce a cell array with N elements.</li><li>The Bundled Parsing: This step tries to merge the cells generated by Raw Parsing into a unified structure, which is much easier for analysis. However, <strong>the merging may fail</strong> if the internal data structures are different across all measurements. And if it fails, a warning message will be shown.</li></ul><h3 id="data-structures-of-the-raw-parsing" tabindex="-1"><a class="header-anchor" href="#data-structures-of-the-raw-parsing"><span>Data structures of the Raw Parsing</span></a></h3><p>Each cell of the result array generated by Raw Parsing contains the following items. You may click the links on the left to view its internal structure.</p><table><thead><tr><th>Variable</th><th>Description</th><th>Value type</th></tr></thead><tbody><tr><td><a href="#standard-header">StandardHeader</a></td><td>802.11 MAC header</td><td>MATLAB struct</td></tr><tr><td><a href="#rxsbasic-segment">RxSBasic</a></td><td>RxSBasic Segment</td><td>MATLAB struct</td></tr><tr><td>RxExtraInfo</td><td><a href="#extrainfo">ExtraInfo</a> Segment (measured at Rx end)</td><td>MATLAB struct</td></tr><tr><td><a href="#mvmextra-segment">MVMExtra</a></td><td>Extra header information from AX210/AX200 NIC</td><td>MATLAB struct</td></tr><tr><td>CSI</td><td><a href="#csi-segment">CSI</a> measured from HT/VHT/HE/EHT-LTF field</td><td>MATLAB struct</td></tr><tr><td>LegacyCSI</td><td><a href="#csi-segment">CSI</a> measured from L-LTF field, measured by SDR frontend</td><td>MATLAB struct</td></tr><tr><td>MPDU</td><td>Raw MPDU data without FCS bytes</td><td>uint8 array</td></tr><tr><td><a href="#picoscenes-common-header">PicoScenesHeader</a></td><td>PicoScenes Common Header (optional)</td><td>MATLAB struct</td></tr><tr><td>TxExtraInfo</td><td><a href="#extrainfo">ExtraInfo</a> Segment (assembled and transmitted by Tx end, optional)</td><td>MATLAB struct</td></tr><tr><td>BasebandSignals</td><td>The complete time domain baseband signals</td><td>complex double array</td></tr></tbody></table><h4 id="_1-standard-header" tabindex="-1"><a class="header-anchor" href="#_1-standard-header"><span>1. Standard Header</span></a></h4><table><thead><tr><th>Variable</th><th>Description</th><th>Value type</th></tr></thead><tbody><tr><td><a href="#control-field">ControlField</a></td><td>The Frame Control field</td><td>MATLAB struct</td></tr><tr><td>Addr1</td><td>Address 1</td><td>uint8</td></tr><tr><td>Addr2</td><td>Address 2</td><td>uint8</td></tr><tr><td>Addr3</td><td>Address 3</td><td>uint8</td></tr><tr><td>Fragment</td><td>Fragment Number</td><td>uint16</td></tr><tr><td>Sequence</td><td>Sequence Number</td><td>uint16</td></tr></tbody></table><h5 id="control-field" tabindex="-1"><a class="header-anchor" href="#control-field"><span>Control Field</span></a></h5><table><thead><tr><th>Variable</th><th>Description</th><th>Value Type</th></tr></thead><tbody><tr><td>Version</td><td>802.11 Protocol Version 2-bit</td><td>uint16</td></tr><tr><td>Type</td><td>Frame Type 2-bit</td><td>uint16</td></tr><tr><td>SubType</td><td>Frame Subtype 4-bit</td><td>uint16</td></tr><tr><td>ToDS</td><td>To DS bit</td><td>uint16</td></tr><tr><td>FromDS</td><td>From DS bit</td><td>uint16</td></tr><tr><td>MoreFrags</td><td>More Fragment bit</td><td>uint16</td></tr><tr><td>Retry</td><td>Retry bit</td><td>uint16</td></tr><tr><td>PowerManagement</td><td>Power Management bit</td><td>uint16</td></tr><tr><td>More</td><td>More Data bit</td><td>uint16</td></tr><tr><td>Protected</td><td>Protected Frame bit</td><td>uint16</td></tr><tr><td>Order</td><td>+HTC/Order bit</td><td>uint16</td></tr></tbody></table><h4 id="rxsbasic-segment" tabindex="-1"><a class="header-anchor" href="#rxsbasic-segment"><span>RXSBasic Segment</span></a></h4><table><thead><tr><th>Variable</th><th>Description</th><th>Value type</th></tr></thead><tbody><tr><td>DeviceType</td><td>Device Type ID (0x2100 for AX210, 0x2000 for AX200, 0x9300 for QCA9300, 0x5300 for IWL5300, 0x1234 for USRP, 0x24D2 for HackRF One)</td><td>uint16</td></tr><tr><td>Timestamp</td><td>A us-level timestamp for the packet PPDU start</td><td>uint64</td></tr><tr><td>SystemTime</td><td>The ns-level timestamp (since epoch) measured by the host driver</td><td>uint64</td></tr><tr><td>CenterFreq</td><td>The <em>carrier frequency</em> of the current Rx channel in MHz</td><td>uint16</td></tr><tr><td>ControlFreq</td><td>The <em>center frequency</em> of the <strong>20-MHz control channel</strong> of the current Rx channel, in MHz</td><td>uint16</td></tr><tr><td>CBW</td><td>Channel BandWidth, 20/40/80/160 for HT20/HT40+ or -/VHT(or HE)80/VHT(or HE)160 format</td><td>uint16</td></tr><tr><td>PacketFormat</td><td>0/1/2/3/4 for NonHT, HT, VHT, HE-SU and HE-MU, respectively</td><td>int8</td></tr><tr><td>PacketCBW</td><td>Channel BandWidth of the current packet, 20/40/80/160 for 20/40/80/160-MHz channel bandwidth</td><td>uint16</td></tr><tr><td>GI</td><td>Guard Interval, 400/800/1600/3200 for 0.4/0.8/1.6/3.2us</td><td>uint16</td></tr><tr><td>MCS</td><td>MCS index, in 802.11ac/ax format (no spatial streams)</td><td>uint8</td></tr><tr><td>NumSTS</td><td>Number of Space-Time Streams</td><td>uint8</td></tr><tr><td>NumESS</td><td>Number of Extra Spatial Sounding (an 802.11n only feature)</td><td>uint8</td></tr><tr><td>NumRx</td><td>Number of Rx Chains</td><td>uint8</td></tr><tr><td>NoiseFloor</td><td>Baseband noise floor</td><td>int8</td></tr><tr><td>RSSI</td><td>RSSI value (dBm)</td><td>uint8</td></tr><tr><td>RSSI1</td><td>RSSI of the 1st radio chain</td><td>uint8</td></tr><tr><td>RSSI2</td><td>RSSI of the 2nd radio chain (meaningless for less than 2 Rx chain cases)</td><td>uint8</td></tr><tr><td>RSSI3</td><td>RSSI of the 3rd radio chain (meaningless for less than 3 Rx chain cases)</td><td>uint8</td></tr></tbody></table><h4 id="picoscenes-common-header" tabindex="-1"><a class="header-anchor" href="#picoscenes-common-header"><span>PicoScenes Common Header</span></a></h4><table><thead><tr><th>Variable</th><th>Description</th><th>Value type</th></tr></thead><tbody><tr><td>MagicValue</td><td>a fixed value of 0x20150315, used for PicoScenes Common Header recognition</td><td>uint32</td></tr><tr><td>Version</td><td>Version number of the PicoScenes Common Header</td><td>uint32</td></tr><tr><td>DeviceType</td><td>Same as DeviceType in <a href="#standard-header">StandardHeader</a></td><td>uint16</td></tr><tr><td>FrameType</td><td>The frame type ID defined by PicoScenes plugins</td><td>uint8</td></tr><tr><td>TaskId</td><td>A general-purpose ID used for packet alignment</td><td>uint16</td></tr><tr><td>TxId</td><td>A general-purpose ID used for Tx sequence tracking</td><td>uint16</td></tr></tbody></table><h4 id="extrainfo" tabindex="-1"><a class="header-anchor" href="#extrainfo"><span>ExtraInfo</span></a></h4><table><thead><tr><th>Variable</th><th>Description</th><th>Value type</th></tr></thead><tbody><tr><td>HasLength</td><td>Checking if the length field is present in the ExtraInfo segment</td><td>uint8</td></tr><tr><td>HasVersion</td><td>Checking if the version field is present in the ExtraInfo segment</td><td>uint8</td></tr><tr><td>HasMacAddr_cur</td><td>Checking if the current MAC Address is present in the ExtraInfo segment</td><td>uint8</td></tr><tr><td>HasMacAddr_rom</td><td>Checking if the hardware MAC Address is present in the ExtraInfo segment</td><td>uint8</td></tr><tr><td>HasChansel</td><td>Checking if the QCA9300 CHANSEL field is present in the ExtraInfo segment</td><td>uint8</td></tr><tr><td>HasBMode</td><td>Checking if the QCA9300 BMode field is present in the ExtraInfo segment</td><td>uint8</td></tr><tr><td>HasEVM</td><td>Checking if the EVM field is present in the ExtraInfo segment</td><td>uint8</td></tr><tr><td>HasTxChainMask</td><td>Checking if the Tx chain mask is present in the ExtraInfo segment</td><td>uint8</td></tr><tr><td>HasRxChainMask</td><td>Checking if the Rx chain mask is present in the ExtraInfo segment</td><td>uint8</td></tr><tr><td>HasTxpower</td><td>Checking if the Tx transmit power is present in the ExtraInfo segment</td><td>uint8</td></tr><tr><td>HasTxTSF</td><td>Checking if the QCA9300 scheduled Tx time field is present in the ExtraInfo segment</td><td>uint8</td></tr><tr><td>HasLastHwTxTSF</td><td>Checking if the QCA9300 last Tx time field is present in the ExtraInfo segment</td><td>uint8</td></tr><tr><td>HasChannelFlags</td><td>Checking if the QCA9300/IWL5300 channel flag is present in the ExtraInfo segment</td><td>uint8</td></tr><tr><td>HasTxNess</td><td>Checking if the Tx Number of Extra Spatial Sounding (NESS) field is present in the ExtraInfo segment</td><td>uint8</td></tr><tr><td>HasTuningPolicy</td><td>Checking if the QCA9300 carrier frequency tuning policy field is present in the ExtraInfo segment</td><td>uint8</td></tr><tr><td>HasPLLRate</td><td>Checking if the QCA9300 PLL rate field is present in the ExtraInfo segment</td><td>uint8</td></tr><tr><td>HasPLLClkSel</td><td>Checking if the QCA9300 PLL clock selector field is present in the ExtraInfo segment</td><td>uint8</td></tr><tr><td>HasPLLRefDiv</td><td>Checking if the QCA9300 PLL Reference clock divider field is present in the ExtraInfo segment</td><td>uint8</td></tr><tr><td>HasAGC</td><td>Checking if the IWL5300 AGC field is present in the ExtraInfo segment</td><td>uint8</td></tr><tr><td>HasAntennaSelection</td><td>Checking if the IWL5300 antenna permutation field is present in the ExtraInfo segment</td><td>uint8</td></tr><tr><td>HasSamplingRate</td><td>Checking if the baseband sampling rate is present in the ExtraInfo segment</td><td>uint8</td></tr><tr><td>HasCFO</td><td>Checking if the carrier frequency offset field is present in the ExtraInfo segment</td><td>uint8</td></tr><tr><td>Length</td><td>Length of the current ExtraInfo</td><td>uint16</td></tr><tr><td>Version</td><td>The version of the current ExtraInfo data structure</td><td>uint64</td></tr><tr><td>MACAddressCurrent</td><td>The last 3 bytes of the current MAC Address</td><td>1x3 uint8</td></tr><tr><td>MACAddressROM</td><td>The last 3 bytes of the ROM MAC Address</td><td>1x3 uint8</td></tr><tr><td>CHANSEL</td><td>QCA9300 CHANSEL value</td><td>uint32</td></tr><tr><td>BMode</td><td>QCA9300 BMode value</td><td>uint8</td></tr><tr><td>EVM</td><td>QCA9300 error vector magnitude (EVM) values</td><td>int8 array</td></tr><tr><td>TxChainMask</td><td>Tx chain mask</td><td>uint8</td></tr><tr><td>RxChainMask</td><td>Rx chain mask</td><td>uint8</td></tr><tr><td>TxPower</td><td>Transmission power</td><td>uint8</td></tr><tr><td>CF</td><td>Carrier frequency</td><td>uint64</td></tr><tr><td>TXTSF</td><td>QCA9300 scheduled Tx time</td><td>uint32</td></tr><tr><td>LastTXTSF</td><td>QCA9300 last Tx time</td><td>uint32</td></tr><tr><td>ChannelFlags</td><td>Flag of current NIC status</td><td>uint16</td></tr><tr><td>TxNess</td><td>The number of Tx extra spatial sounding</td><td>uint8</td></tr><tr><td>TurningPolicy</td><td>QCA9300 carrier frequency tuning policy field</td><td>uint8</td></tr><tr><td>PLLRate</td><td>QCA9300 PLL rate</td><td>uint16</td></tr><tr><td>PLLClockSelect</td><td>QCA9300 PLL clock selector field</td><td>uint8</td></tr><tr><td>PLLRefDiv</td><td>QCA9300 PLL Reference clock divider</td><td>uint8</td></tr><tr><td>AGC</td><td>IWL5300 AGC value</td><td>uint8</td></tr><tr><td>ANTSEL</td><td>IWL5300 antenna permutation value</td><td>1x3 uint8</td></tr><tr><td>SF</td><td>Baseband sampling rate</td><td>double</td></tr><tr><td>CFO</td><td>The estimated carrier frequency offset (CFO)</td><td>double</td></tr></tbody></table><h4 id="mvmextra-segment" tabindex="-1"><a class="header-anchor" href="#mvmextra-segment"><span>MVMExtra Segment</span></a></h4><table><thead><tr><th>Variable</th><th>Description</th><th>Value type</th></tr></thead><tbody><tr><td>FTMClock</td><td>320 MHz clock tick of (3.125ns resolution) AX210/AX200 NIC (blocked for PSLP-FL user)</td><td>double</td></tr><tr><td>RateNFlags</td><td>Intel MVM flag for MCS and STS</td><td>double</td></tr></tbody></table><h4 id="csi-segment" tabindex="-1"><a class="header-anchor" href="#csi-segment"><span>CSI Segment</span></a></h4><table><thead><tr><th>Variable</th><th>Description</th><th>Value type</th></tr></thead><tbody><tr><td>DeviceType</td><td>Same as DeviceType in <a href="#standard-header">StandardHeader</a></td><td>double</td></tr><tr><td>FirmwareVersion</td><td>The firmware version used for CSI data extraction</td><td>double</td></tr><tr><td>PacketFormat</td><td>0/1/2/3/4 for NonHT, HT, VHT, HE-SU and HE-MU, respectively</td><td>double</td></tr><tr><td>CBW</td><td>Same as CBW in <a href="#standard-header">StandardHeader</a></td><td>double</td></tr><tr><td>CarrierFreq</td><td>Carrier frequency in Hz</td><td>double</td></tr><tr><td>SamplingRate</td><td>Baseband sampling rate or bandwidth in Hz</td><td>double</td></tr><tr><td>SubcarrierBandwidth</td><td>The subcarrier bandwidth in Hz</td><td>double</td></tr><tr><td>NumTones</td><td>The number of OFDM subcarriers</td><td>uint16</td></tr><tr><td>NumTx</td><td>Number of transmit Space-Time Streams</td><td>uint8</td></tr><tr><td>NumRx</td><td>Number of Rx Chains</td><td>uint8</td></tr><tr><td>NumESS</td><td>Number of Extra Spatial Sounding (an 802.11n only feature)</td><td>uint8</td></tr><tr><td>AntSEL</td><td>IWL5300 antenna permutation value</td><td>uint8</td></tr><tr><td>CSI</td><td>CSI data with size of <code>N_tone×N_sts×N_rx</code></td><td>complex double array</td></tr><tr><td>Mag</td><td>CSI magnitude data with size of <code>N_tone×N_sts×N_rx</code></td><td>double array</td></tr><tr><td>Phase</td><td>CSI phase data with size of <code>N_tone×N_sts×N_rx</code></td><td>double array</td></tr><tr><td>SubcarrierIndex</td><td>the indices of OFDM subcarriers</td><td>int16 array</td></tr></tbody></table><p>The MATLAB parser performs additional pre-processing to the raw CSI data:</p><ol><li>Interpolate the 0-th and other <em>missing</em> pilot subcarriers for the CSI</li><li>Calculate the norm of CSI and save to &quot;Mag&quot;</li><li>Unwrap the phase into &quot;Phase&quot;</li><li>Perform CSD removal to &quot;Phase&quot;, which removes the additional phase slope introduced by CSD (cyclic shift delay)</li></ol>',50))])}const b=a(h,[["render",u]]),g=JSON.parse('{"path":"/manual/matlab.html","title":"PicoScenes MATLAB Toolbox Core","lang":"en-US","frontmatter":{"title":"PicoScenes MATLAB Toolbox Core","autoNumbering":true,"startNumber":8,"head":[["meta",{"property":"og:url","content":"https://ps.zpj.io/manual/matlab.html"}],["meta",{"property":"og:title","content":"PicoScenes MATLAB Toolbox Core"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-04-29T04:26:17.000Z"}],["meta",{"property":"article:modified_time","content":"2025-04-29T04:26:17.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"PicoScenes MATLAB Toolbox Core\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-04-29T04:26:17.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Zhiping Jiang\\"}]}"]]},"headers":[{"level":2,"title":"Prerequisites","slug":"prerequisites","link":"#prerequisites","children":[{"level":3,"title":"Preparation steps on Ubuntu 22.04 or above","slug":"preparation-steps-on-ubuntu-22-04-or-above","link":"#preparation-steps-on-ubuntu-22-04-or-above","children":[]},{"level":3,"title":"Preparation steps on macOS 12.3 and above","slug":"preparation-steps-on-macos-12-3-and-above","link":"#preparation-steps-on-macos-12-3-and-above","children":[]},{"level":3,"title":"Preparation steps on Windows 10 or 11","slug":"preparation-steps-on-windows-10-or-11","link":"#preparation-steps-on-windows-10-or-11","children":[]}]},{"level":2,"title":"Obtain PicoScenes MATLAB Toolbox Core","slug":"obtain-picoscenes-matlab-toolbox-core","link":"#obtain-picoscenes-matlab-toolbox-core","children":[]},{"level":2,"title":"Install PMT-Core in MATLAB","slug":"install-pmt-core-in-matlab","link":"#install-pmt-core-in-matlab","children":[]},{"level":2,"title":"Verify the installation","slug":"verify-the-installation","link":"#verify-the-installation","children":[]},{"level":2,"title":"Usage","slug":"usage","link":"#usage","children":[{"level":3,"title":"Structures of the PicoScenes Tx and Rx frames","slug":"structures-of-the-picoscenes-tx-and-rx-frames","link":"#structures-of-the-picoscenes-tx-and-rx-frames","children":[]},{"level":3,"title":"Data structures of the Raw Parsing","slug":"data-structures-of-the-raw-parsing","link":"#data-structures-of-the-raw-parsing","children":[]}]}],"git":{"createdTime":1744716585000,"updatedTime":1745900777000,"contributors":[{"name":"amumu","username":"amumu","email":"136903859@qq.com","commits":4,"url":"https://github.com/amumu"}]},"readingTime":{"minutes":6.32,"words":1895},"filePathRelative":"manual/matlab.md","localizedDate":"April 15, 2025","excerpt":""}');export{b as comp,g as data};
